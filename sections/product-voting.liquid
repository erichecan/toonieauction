<div class="container mx-auto px-4 py-8 rounded-xl overflow-hidden shadow-lg bg-white">
  <h2 class="text-3xl font-bold text-center mb-10 text-gray-800">{{ section.settings.heading }}</h2>
  <div class="product-grid gap-8">
    {% comment %}
      Product items will be rendered here with like and wishlist options.
    {% endcomment %}

    {% if section.settings.products != blank %}
      {% for product in section.settings.products %}
        <div class="product-item bg-white rounded-xl shadow-lg hover:shadow-xl transition-all duration-300 overflow-hidden flex flex-col transform hover:-translate-y-1">
          <div class="relative">
            {% if product.featured_image %}
              <a href="{{ product.url }}" class="block">
                <img src="{{ product.featured_image | img_url: 'large' }}" alt="{{ product.featured_image.alt }}" class="product-image">
              </a>
            {% else %}
              <div class="product-image bg-gray-300 flex items-center justify-center text-gray-500">
                <span>No Image</span>
              </div>
            {% endif %}
            
            <!-- 移除单独的计数器显示 -->
          </div>
          <div class="p-6 flex flex-col flex-grow">
            <h3 class="text-2xl font-bold mb-3 text-gray-900 hover:text-blue-600 transition-colors duration-200">
              <a href="{{ product.url }}" class="hover:underline">{{ product.title }}</a>
            </h3>
            <p class="text-gray-600 text-base leading-relaxed mb-6">{{ product.snippet | strip_html | truncatewords: 20 }}</p>
             
             <!-- Like and Wishlist Buttons -->
             <div class="flex gap-6 mt-6">
                 <button class="like-button flex items-center justify-center bg-blue-500 hover:bg-blue-600 text-white px-10 py-4 rounded-2xl text-xl font-semibold transition-colors duration-200 min-w-[160px]" data-product-id="{{ product.id }}">
                     <i class="fas fa-thumbs-up mr-2"></i>
                     <span>Like</span>
                     <span class="like-count"></span>
                 </button>
                 <button class="wishlist-button flex items-center justify-center bg-red-500 hover:bg-red-600 text-white px-10 py-4 rounded-2xl text-xl font-semibold transition-colors duration-200 min-w-[160px]" data-product-id="{{ product.id }}">
                    <i class="fas fa-heart mr-2"></i>
                    <span>Wishlist</span>
                    <span class="wishlist-count"></span>
                 </button>
             </div>
          </div>
        </div>
      {% endfor %}
    {% else %}
      <p class="text-center text-gray-500 col-span-full">Please select products in the theme editor to display them here.</p>
    {% endif %}
  </div>
</div>

{% schema %}
{
  "name": "Product Spotlight",
  "settings": [
    {
      "type": "text",
      "id": "heading",
      "label": "Section Heading",
      "default": "Product Spotlight"
    },
    {
      "type": "product_list",
      "id": "products",
      "label": "Products",
      "limit": 9,
      "info": "Select products to display."
    }
  ],
  "presets": [
    {
      "name": "Product Spotlight",
      "category": "Custom"
    }
  ]
}
{% endschema %}

<style>
  /* Container and grid styles */
  .container {
    max-width: 1200px;
  }

  .product-grid {
    display: grid;
    grid-template-columns: repeat(1, 1fr);
    gap: 2rem;
    width: 100%;
  }

  @media (min-width: 768px) {
    .product-grid {
      grid-template-columns: repeat(2, 1fr);
      gap: 2.5rem;
    }
  }

  @media (min-width: 1024px) {
    .product-grid {
      grid-template-columns: repeat(3, 1fr);
      gap: 3rem;
    }
  }

  /* Product item styles - FORCE stacking on all devices */
  .product-item {
    display: flex;
    flex-direction: column !important; /* 强制垂直堆叠 */
    width: 100%;
  }

  /* 确保 product-item 的直接子元素（图片容器和内容容器）也堆叠并占据完整宽度 */
  .product-item > .relative,
  .product-item > .p-6 {
      width: 100% !important;
      max-width: 100% !important;
  }

  .product-image {
    width: 100%;
    aspect-ratio: 1/1; /* Added for square aspect ratio */
    object-fit: cover;
    background-color: #f3f4f6;
  }

  /* 桌面端布局和按钮对齐（左对齐） */
  @media (min-width: 768px) {
    .product-item {
        align-items: flex-start !important; /* 产品项内所有内容左对齐 */
    }
    .product-item .p-6 {
      text-align: left !important; /* 确保文本左对齐 */
      align-items: flex-start !important; /* 确保 p-6 内部的 flex items 左对齐 */
      padding-left: 0 !important; /* 移除可能存在的左内边距，确保与图片对齐 */
    }
    /* 精确目标按钮容器，强制左对齐 */
    .product-item .p-6 .flex.gap-6.mt-6 {
      justify-content: flex-start !important; /* 按钮组左对齐 */
    }
  }

  /* 移动端布局和按钮对齐（居中） */
  @media (max-width: 767px) {
    .product-item .p-6 {
      align-items: center !important; /* 强制 flex items 居中 */
      text-align: center !important; /* 强制文本居中 */
    }
    /* 精确目标按钮容器，强制居中 */
    .product-item .p-6 .flex.gap-6.mt-6 {
      justify-content: center !important; /* 按钮组居中 */
    }
  }

  /* Button styles */
  .like-button, .wishlist-button {
    font-size: 18px;
    transition: background-color 0.2s ease;
    border: none;
    outline: none;
    color: white;
    font-weight: bold;
    padding: 1rem 2.5rem;
    border-radius: 1.5rem;
  }

  .like-button {
    background-color: #3B82F6; /* blue-500 */
  }

  .wishlist-button {
    background-color: #EF4444; /* red-500 */
  }

  .like-button:hover {
    background-color: #2563EB; /* blue-600 */
  }
  
  .wishlist-button:hover {
    background-color: #DC2626; /* red-600 */
  }

  .like-button:active, .wishlist-button:active {
    transform: translateY(1px);
  }

  /* Counter styles */
  .like-count, .wishlist-count {
    display: inline-block;
    font-size: 18px;
    margin-left: 6px;
  }

  /* Animation */
  @keyframes bounce {
    0%, 100% { transform: translateY(0); }
    50% { transform: translateY(-2px); }
  }

  .animate-bounce {
    animation: bounce 0.3s ease;
  }

  /* Responsive adjustments */
  @media (max-width: 640px) {
    .like-button, .wishlist-button {
      padding: 0.75rem 1.5rem;
      min-width: 140px;
      font-size: 16px;
    }
  }
</style>

<script>
  class InteractionManager {
    constructor() {
      this.initializeState();
      this.setupEventListeners();
    }

    initializeState() {
      this.state = JSON.parse(localStorage.getItem('productInteractions') || '{}');
    }

    saveState() {
      localStorage.setItem('productInteractions', JSON.stringify(this.state));
    }

    getProductState(productId) {
      return this.state[productId] || { likes: 0, wishlisted: false };
    }

    updateCounter(element, count) {
      // 添加空格和括号
      element.textContent = ` (${count})`;
      element.classList.add('animate-bounce');
      setTimeout(() => element.classList.remove('animate-bounce'), 500);
    }

    setupEventListeners() {
      // Like button handlers
      document.querySelectorAll('.like-button').forEach(button => {
        const productId = button.dataset.productId;
        const counterElement = button.querySelector('.like-count');
        const initialState = this.getProductState(productId);
        
        if (counterElement) {
          this.updateCounter(counterElement, initialState.likes || 0);
        }

        button.addEventListener('click', () => {
          const state = this.getProductState(productId);
          state.likes = (state.likes || 0) + 1;
          this.state[productId] = state;
          this.saveState();

          if (counterElement) {
            this.updateCounter(counterElement, state.likes);
          }
        });
      });

      // Wishlist button handlers
      document.querySelectorAll('.wishlist-button').forEach(button => {
        const productId = button.dataset.productId;
        const counterElement = button.querySelector('.wishlist-count');
        const initialState = this.getProductState(productId);

        if (counterElement) {
          this.updateCounter(counterElement, initialState.wishlisted ? '1' : '0');
        }

        button.addEventListener('click', () => {
          const state = this.getProductState(productId);
          state.wishlisted = !state.wishlisted;
          this.state[productId] = state;
          this.saveState();

          if (counterElement) {
            this.updateCounter(counterElement, state.wishlisted ? '1' : '0');
          }
        });
      });
    }
  }

  document.addEventListener('DOMContentLoaded', () => {
    new InteractionManager();
  });
</script>