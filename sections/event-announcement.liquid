{% schema %}
{
  "name": "Event Announcement",
  "settings": [
    {
      "type": "text",
      "id": "title",
      "label": "Section Title",
      "default": "Upcoming Event"
    },
    {
      "type": "image_picker",
      "id": "event_image",
      "label": "Event Image"
    },
    {
      "type": "text",
      "id": "event_date",
      "label": "Event Date",
      "default": "Thursday June 20th 2024 - Special Online Event"
    },
    {
      "type": "text",
      "id": "event_description",
      "label": "Event Description",
      "default": "Join us for a special online event with exclusive offers and new arrivals!"
    },
    {
      "type": "text",
      "id": "countdown_text",
      "label": "Countdown Text",
      "default": "Starts In:"
    },
    {
      "type": "text",
      "id": "countdown_target_date",
      "label": "Countdown Target Date",
      "info": "Enter the target date and time in YYYY-MM-DD HH:MM:SS format.",
      "placeholder": "YYYY-MM-DD HH:MM:SS"
    },
    {
      "type": "text",
      "id": "button_text",
      "label": "Button Text",
      "default": "View Event Details"
    },
    {
      "type": "url",
      "id": "button_link",
      "label": "Button Link"
    }
  ],
  "presets": [
    {
      "name": "Event Announcement",
      "category": "Custom Sections"
    }
  ]
}
{% endschema %}

{% comment %}
  {{ 'section-event-announcement.css' | asset_url | stylesheet_tag }}
{% endcomment %}

<div class="event-announcement p-8">
  <div class="event-announcement-container mx-auto rounded-xl overflow-hidden shadow-lg bg-white p-8">
    
    <h2 class="text-3xl font-bold text-center mb-10 text-gray-800">{{ section.settings.title }}</h2>
    
    <div class="event-announcement-row">
      <div class="event-announcement-col event-card-image-col">
      {% if section.settings.event_image %}
          <div class="event-card-image rounded-lg overflow-hidden">
          {{ section.settings.event_image | image_url: width: 150 | image_tag: 
            loading: 'lazy',
            class: 'w-full h-full object-cover',
            alt: section.settings.event_date
          }}
        </div>
      {% else %}
          <div class="event-card-image bg-blue-300 rounded-lg flex items-center justify-center text-blue-800 text-sm italic">
          Event Image Placeholder
        </div>
      {% endif %}
      </div>
      <div class="event-announcement-col event-content-col flex-grow">
        <h3 class="text-xl font-semibold text-gray-800 mb-2">{{ section.settings.event_date }}</h3>
        <p class="text-gray-600 text-base mb-4">{{ section.settings.event_description }}</p>
        <div class="flex items-center text-gray-700 mb-4">
          {{ section.settings.countdown_text }} <span class="font-semibold ml-1" id="countdown-timer" data-target-date="{{ section.settings.countdown_target_date }}"></span>
        </div>
        {% if section.settings.button_link != blank %}
          <div class="event-announcement-button-wrapper">
          <a href="{{ section.settings.button_link }}" class="inline-block bg-green-600 text-white px-6 py-3 rounded-lg hover:bg-green-700 transition duration-300 ease-in-out text-lg font-semibold">
            {{ section.settings.button_text }}
          </a>
          </div>
        {% endif %}
      </div>
    </div>
  </div>
</div>

<style>
  /* Scoped styles for event announcement section */
  .event-announcement .event-card-image {
    width: 150px !important;
    height: 150px !important;
    object-fit: cover !important;
    flex-shrink: 0 !important;
  }
  
  .event-announcement .event-announcement-container {
    max-width: 1200px !important;
    margin-left: auto !important;
    margin-right: auto !important;
    border-radius: 0.75rem !important;
    overflow: hidden !important;
    box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1) !important;
    background-color: #ffffff !important; /* bg-white */
    padding: 2rem !important; /* p-8 */
  }

  .event-announcement.p-8 {
      padding: 2rem !important; /* p-8 */
  }

  /* Scoped Tailwind-like classes */
  .event-announcement .mx-auto {
      margin-left: auto !important;
      margin-right: auto !important;
  }
  .event-announcement .rounded-xl {
      border-radius: 0.75rem !important;
  }
  .event-announcement .overflow-hidden {
      overflow: hidden !important;
  }
  .event-announcement .shadow-lg {
      box-shadow: 0 10px 15px -3px rgba(0, 0, 0, 0.1), 0 4px 6px -2px rgba(0, 0, 0, 0.05) !important; /* Tailwind shadow-lg */
  }
  .event-announcement .bg-white {
      background-color: #ffffff !important;
  }
  .event-announcement .p-8 {
      padding: 2rem !important;
  }

  .event-announcement .text-3xl {
      font-size: 1.875rem !important; /* 30px */
      line-height: 2.25rem !important; /* 36px */
  }
  .event-announcement .font-bold {
      font-weight: 700 !important;
  }
  .event-announcement .text-center {
      text-align: center !important;
  }
  .event-announcement .mb-10 {
      margin-bottom: 2.5rem !important; /* 40px */
  }
  .event-announcement .text-gray-800 {
      color: #1f2937 !important;
  }
  .event-announcement .flex {
      display: flex !important;
  }
  .event-announcement .items-center {
      align-items: center !important;
  }
  .event-announcement .bg-gray-50 {
      background-color: #f9fafb !important;
  }
  .event-announcement .rounded-lg {
      border-radius: 0.5rem !important; /* 8px */
  }
  .event-announcement .shadow-md {
      box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1) !important;
  }
  .event-announcement .p-6 {
      padding: 1.5rem !important; /* 24px */
  }
   .event-announcement .mb-6 {
      margin-bottom: 1.5rem !important; /* 24px */
  }
   .event-announcement .mr-6 {
      margin-right: 1.5rem !important; /* 24px */
   }
   .event-announcement .bg-blue-300 {
       background-color: #93c5fd !important;
   }
   .event-announcement .justify-center {
       justify-content: center !important;
   }
   .event-announcement .text-blue-800 {
       color: #1e40af !important;
   }
   .event-announcement .text-sm {
       font-size: 0.875rem !important; /* 14px */
       line-height: 1.25rem !important; /* 20px */
   }
   .event-announcement .italic {
       font-style: italic !important;
   }
   .event-announcement .flex-grow {
       flex-grow: 1 !important;
   }
   .event-announcement .text-xl {
       font-size: 1.25rem !important; /* 20px */
       line-height: 1.75rem !important; /* 28px */
   }
    .event-announcement .font-semibold {
        font-weight: 600 !important;
    }
   .event-announcement .mb-2 {
       margin-bottom: 0.5rem !important; /* 8px */
   }
   .event-announcement .text-gray-600 {
       color: #4b5563 !important;
   }
   .event-announcement .text-base {
       font-size: 1rem !important; /* 16px */
       line-height: 1.5rem !important; /* 24px */
   }
   .event-announcement .text-gray-700 {
       color: #374151 !important;
   }
   .event-announcement .mb-4 {
       margin-bottom: 1rem !important; /* 16px */
   }
   .event-announcement .ml-1 {
       margin-left: 0.25rem !important; /* 4px */
   }
   .event-announcement .inline-block {
       display: inline-block !important;
   }
   .event-announcement .bg-green-600 {
       background-color: #059669 !important;
   }
   .event-announcement .text-white {
       color: #ffffff !important;
   }
   .event-announcement .px-6 {
       padding-left: 1.5rem !important; /* 24px */
       padding-right: 1.5rem !important; /* 24px */
   }
   .event-announcement .py-3 {
       padding-top: 0.75rem !important; /* 12px */
       padding-bottom: 0.75rem !important; /* 12px */
   }
   .event-announcement .text-lg {
       font-size: 1.125rem !important; /* 18px */
       line-height: 1.75rem !important; /* 28px */
   }
   /* Scoped hover styles with !important */
   .event-announcement .hover\:bg-green-700:hover {
       background-color: #047857 !important;
   }
   .event-announcement .transition {
       transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter !important;
       transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1) !important;
       transition-duration: 150ms !important;
   }
   .event-announcement .ease-in-out {
       transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1) !important;
   }

  .event-announcement-row {
    display: flex;
    flex-direction: row;
    align-items: center;
    gap: 1.5rem;
    width: 100%;
  }
  .event-announcement-col {
    display: flex;
    flex-direction: column;
    justify-content: center;
  }
  .event-card-image-col {
    flex: 0 0 auto;
    align-items: center;
  }
  .event-content-col {
    flex: 1 1 0%;
  }
  @media (max-width: 749px) {
    .event-announcement-row {
      flex-direction: column;
      align-items: stretch;
      gap: 1rem;
    }
    .event-card-image-col, .event-content-col {
      width: 100%;
      margin-right: 0 !important;
    }
    .event-card-image {
      margin: 0 auto 1rem auto !important;
      width: 120px !important;
      height: 120px !important;
      margin-left: auto !important;
      margin-right: auto !important;
    }
    .event-content-col {
      align-items: center;
      text-align: center;
    }
  }
  @media (min-width: 750px) {
    .event-announcement .event-content-col a.inline-block {
      font-size: 1rem !important;      /* 16px */
      padding: 0.5rem 1.25rem !important; /* 8px 20px */
      display: block !important; /* Keep it a block element for width control */
      max-width: max-content; /* Make button only as wide as its content + padding */
      margin-left: 0 !important; /* Align to the left */
      margin-right: auto !important; /* Push to the left */
    }
  }

  .event-announcement-button-wrapper {
    width: 100%; /* Make the wrapper take the full width of its parent */
    margin-top: 1.5rem; /* Add some space above the button, adjusts well with mb-4 on countdown */
  }

  @media (max-width: 749px) {
    .event-announcement .event-content-col a.inline-block {
        font-size: 0.9rem !important; /* Slightly smaller for mobile */
        padding: 0.6rem 1.2rem !important; /* Adjust padding for mobile */
    }
    /* Ensure content column is centered on mobile when items stack */
    .event-content-col {
      align-items: center; /* Center items horizontally in column for mobile */
      text-align: center; /* Center text for mobile */
    }
  }
</style>

{% javascript %}
  document.addEventListener('DOMContentLoaded', function() {
    const countdownElement = document.getElementById('countdown-timer');
    const targetDateString = countdownElement ? countdownElement.getAttribute('data-target-date') : null;

    if (!countdownElement || !targetDateString) {
      // Element or target date not found, do nothing
      return;
    }

    const targetDate = new Date(targetDateString);

    // Check if the target date is valid
    if (isNaN(targetDate.getTime())) {
      countdownElement.textContent = 'Invalid Date';
      console.error('Invalid date format provided for countdown:', targetDateString);
      return;
    }

    function updateCountdown() {
      const now = new Date().getTime();
      const timeLeft = targetDate.getTime() - now;

      if (timeLeft < 0) {
        countdownElement.textContent = 'Event Started!';
        clearInterval(countdownInterval);
        return;
      }

      const days = Math.floor(timeLeft / (1000 * 60 * 60 * 24));
      const hours = Math.floor((timeLeft % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));
      const minutes = Math.floor((timeLeft % (1000 * 60 * 60)) / (1000 * 60));
      const seconds = Math.floor((timeLeft % (1000 * 60)) / 1000);

      // Format the output
      countdownElement.textContent = `${days} Days ${hours}h ${minutes}m ${seconds}s`;
    }

    // Initial call to display the countdown immediately
    updateCountdown();

    // Update the countdown every second
    const countdownInterval = setInterval(updateCountdown, 1000);

  });
{% endjavascript %} 